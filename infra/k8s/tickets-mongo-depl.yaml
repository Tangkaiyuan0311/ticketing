######## create deploy for mongodb instance
apiVersion: apps/v1 # default list of objects k8s will look at

kind: Deployment # type of object to create

metadata: # config option for the object
  name: tickets-mongo-depl # deployment name

# exact attribute to apply to the object, the behavior
spec:
  replicas: 1 # number of pods to be managed

  # look into all the different pods created, find all the pods with label app: xxx
  selector:
    matchLabels:
      app: tickets-mongo
  # apply configuration to the pod we want to create
  template:
    metadata:
      # we want the pods created to have label app: xxx
      labels:
        app: tickets-mongo
    spec:
      containers: # can be an array of containers
        - name: tickets-mongo # container name
          image: mongo # image hosted in the dockerhub

# kubectl apply -f xxx-depl.yaml
# kubectl rollout restart deployment xxx-depl (prefered for image update)
############################################################################################################
############################################################################################################
############################################################################################################
# create clusterIP service
---
# ClusterIP service for mongodb pod

apiVersion: v1 # default list of objects k8s will look at

kind: Service # type of object to create

metadata: # config option for the object
  name: tickets-mongo-srv # service name

# exact attribute to apply to the object, the behavior
spec:
  type: ClusterIP # communication in the cluster

  # look into all the different pods created, find all the pods with label app: xxx
  selector:
    app: tickets-mongo
  # list all the port numbers of the pods we want to expose
  ports:
    - name: db # logging purpose
      protocol: TCP
      port: 27017 # the port exposed in the cluster
      targetPort: 27017 # the actual port that listens in the pod
